{"version":3,"sources":["reportWebVitals.js","components/card/Card.js","components/CardList/CardList.js","components/SearchBox/SearchBox.js","components/Scroll/Scroll.js","components/ErrorBoundry.js","containers/App/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","src","alt","CardList","robots","map","robot","SearchBox","searchChange","type","onChange","placeholder","Scroll","style","overflowY","border","height","this","props","children","Component","ErrorBoundry","state","hasError","error","errorInfo","setState","App","componentDidMount","a","fetch","response","json","users","onSearchChange","value","target","searchField","filter","toLowerCase","includes","length","filteredRobots","filterRobots","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mDCSCQ,EAdF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MAErB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,UACpD,gCACI,6BAAKJ,IACL,4BAAIC,WCQLI,EAbE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEf,OACI,mCAEQA,EAAOC,KAAI,SAAAC,GAAK,OAAI,cAAC,EAAD,CAAqBT,GAAIS,EAAMT,GAAIC,KAAMQ,EAAMR,KAAMC,MAAOO,EAAMP,OAAvDO,EAAMT,UCKtCU,EAZG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKR,UAAU,MAAf,SACI,uBAAOA,UAAU,mCACVS,KAAK,SACLC,SAAUF,EACVG,YAAY,sBCKhBC,G,6KARP,OACI,qBAAKC,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAmBC,OAAO,SAAjE,SACKC,KAAKC,MAAMC,e,GALPC,cC6BNC,E,kDAzBX,WAAYH,GAAQ,IAAD,8BACf,cAAMA,IAEDI,MAAQ,CACTC,UAAS,GAJE,E,8DAQDC,EAAOC,GACrBR,KAAKS,SAAS,CACVH,UAAS,M,+BAKb,OAAIN,KAAKK,MAAMC,SAEJ,8DAGJN,KAAKC,MAAMC,a,GAtBCC,aC2DZO,E,kDArDX,aAAe,IAAD,8BACV,gBAOJC,kBARc,sBAQM,sBAAAC,EAAA,sDAChBC,MAAM,8CACDxC,MAAK,SAAAyC,GAAQ,OAAIA,EAASC,UAC1B1C,MAAK,SAAA2C,GAAK,OAAI,EAAKP,SAAS,CAACtB,OAAQ6B,OAH1B,2CARN,EAcdC,eAAiB,YAAwB,IAAbC,EAAY,EAArBC,OAASD,MACxB,EAAKT,SAAS,CACVW,YAAaF,KAdjB,EAAKb,MAAQ,CACTlB,OAAQ,GACRiC,YAAa,IAJP,E,yDAoBDjC,EAAQiC,GACjB,OAAOjC,EAAOkC,QAAO,SAAAhC,GACjB,OAAOA,EAAMR,KAAKyC,cAAcC,SAASH,EAAYE,oB,+BAInD,IAAD,EAEyBtB,KAAKK,MAA5BlB,EAFF,EAEEA,OAAQiC,EAFV,EAEUA,YAEf,IAAKjC,EAAOqC,OACR,OAAQ,4CAGZ,IAAMC,EAAiBzB,KAAK0B,aAAavC,EAAQiC,GAEjD,OACI,sBAAKrC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWQ,aAAcS,KAAKiB,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU9B,OAAQsC,e,GA5CxBE,IAAMxB,W,MCAxByB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5B9D,M","file":"static/js/main.958f547a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\n\r\nconst Card = ({id, name, email}) => {\r\n\r\n    return (\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"robot\"/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from '../card/Card'\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n\r\n    return (\r\n        <>\r\n            {\r\n                robots.map(robot => <Card key={robot.id} id={robot.id} name={robot.name} email={robot.email}/>)\r\n            }\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default CardList;","import React from 'react'\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input className=\"pa3 ba b--green bg-lightest-blue\"\r\n                   type=\"search\"\r\n                   onChange={searchChange}\r\n                   placeholder=\"search robots \"/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default SearchBox","import {Component} from 'react'\r\n\r\nclass Scroll extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div style={{overflowY:'scroll',border:'1px solid black', height:'700px'}}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react'\r\n\r\n\r\n\r\nclass ErrorBoundry extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            hasError:false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({\r\n            hasError:true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError)\r\n        {\r\n            return <h1>Oooops. Something went wrong</h1>;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundry\r\n\r\n","import React from \"react\";\r\nimport CardList from \"../../components/CardList/CardList\";\r\nimport SearchBox from \"../../components/SearchBox/SearchBox\";\r\nimport './App.css'\r\nimport Scroll from '../../components/Scroll/Scroll'\r\nimport ErrorBoundry from '../../components/ErrorBoundry'\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({robots: users}));\r\n    }\r\n\r\n    onSearchChange = ({target: {value}}) => {\r\n        this.setState({\r\n            searchField: value\r\n        });\r\n    }\r\n\r\n    filterRobots(robots, searchField){\r\n        return robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase())\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {robots, searchField} = this.state\r\n\r\n        if (!robots.length) {\r\n            return (<h1>Loading...</h1>);\r\n        }\r\n\r\n        const filteredRobots = this.filterRobots(robots, searchField);\r\n\r\n        return (\r\n            <div className=\"tc\">\r\n                <h1 className=\"f1\">RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <CardList robots={filteredRobots}/>\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App/App'\nimport 'tachyons';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}